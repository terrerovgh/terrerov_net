version: '3.8'

networks:
  terrerov_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  bind_config:
  traefik_certs:

services:
  bind9:
    image: ubuntu/bind9:latest
    container_name: bind9
    network_mode: host
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    volumes:
      - ./bind:/etc/bind
      - bind_config:/var/cache/bind
    environment:
      - ROOT_PASSWORD=${ROOT_PASSWORD}
    restart: unless-stopped

  traefik:
    image: traefik:v2.10
    container_name: traefik
    networks:
      - terrerov_net
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.toml:/etc/traefik/traefik.toml:ro
      - traefik_certs:/etc/traefik/acme
    environment:
      - CF_API_TOKEN=${CF_API_TOKEN}
      - EMAIL=${EMAIL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.terrerov.com`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.routers.dashboard.certResolver=cloudflare"
      - "traefik.http.middlewares.auth.basicauth.users=admin:${TRAEFIK_PASSWORD}"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx
    networks:
      - terrerov_net
    ports:
      - "8080:80"
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`www.terrerov.com`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.certResolver=cloudflare"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    networks:
      - terrerov_net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgres.rule=Host(`db.terrerov.com`)"
      - "traefik.http.routers.postgres.entrypoints=websecure"
      - "traefik.http.routers.postgres.certResolver=cloudflare"
      - "traefik.http.services.postgres.loadbalancer.server.port=5432"
    restart: unless-stopped

  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    environment:
      - CF_API_TOKEN=${CF_API_TOKEN}
      - ZONE=terrerov.com
    volumes:
      - ./cloudflare-ddns:/config
    restart: unless-stopped

  netmon:
    build:
      context: ./netmon
      dockerfile: Dockerfile
    container_name: netmon
    networks:
      - terrerov_net
    volumes:
      - ./netmon:/app
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.netmon.rule=Host(`monitor.terrerov.com`)"
      - "traefik.http.routers.netmon.entrypoints=websecure"
      - "traefik.http.routers.netmon.tls.certresolver=cloudflare"
      - "traefik.http.services.netmon.loadbalancer.server.port=8000"
    restart: unless-stopped